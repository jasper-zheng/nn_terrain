[{
                "url": "/nn_terrain/tags/syntax-highlighting",
                "title": "Tag",
                "content": " syntax-highlighting "
            },{
                "url": "/nn_terrain/tags/open-graph-image",
                "title": "Tag",
                "content": " open-graph-image "
            },
                {
                    "url": "/nn_terrain/installation/",
                    "title": "Download and Installation",
                    "content": "I am the first page linked into the primary navigation  "
                },
                {
                    "url": "/nn_terrain/instructions/overview/",
                    "title": "Overview",
                    "content": "What is neural audio autoencoder and why using latent terrain?  Howdy! I am the page child of hello page.― ChildLet’s go back to hello page or go to hello grandchild.&amp;gt; Howdy! I am the page child of hello page.&amp;gt; &amp;gt; ― **Child**Let’s go back to [hello page](/hello-page.md &amp;quot;Go back to hello page&amp;quot;) or go to [hello grandchild](/hello-grandchild.md &amp;quot;Go to hello grandchild page&amp;quot;)."
                },
                {
                    "url": "/nn_terrain/instructions/load-terrain/",
                    "title": "Using pre-trained terrains",
                    "content": "Feeling like using some already built terrains? They can be used as presets.  Howdy! I am the page child of hello page.― ChildLet’s go back to hello page or go to hello grandchild.&amp;gt; Howdy! I am the page child of hello page.&amp;gt; &amp;gt; ― **Child**Let’s go back to [hello page](/hello-page.md &amp;quot;Go back to hello page&amp;quot;) or go to [hello grandchild](/hello-grandchild.md &amp;quot;Go to hello grandchild page&amp;quot;)."
                },
                {
                    "url": "/nn_terrain/instructions/",
                    "title": "Instructions",
                    "content": "Some instructions for getting started exploring AI audio generation with latent terrain.  "
                },
                {
                    "url": "/nn_terrain/instructions/visualisation/",
                    "title": "Creating visualisations",
                    "content": "Given a terrain with 2D inputs, we can visualise it as a map.  Looking at a terrain from above, we&#39;ll get a greyscale surface map, where brighter pixels denote higher latent value."
                },
                {
                    "url": "/nn_terrain/instructions/build-terrain/",
                    "title": "Building from scratch",
                    "content": "Building and training a customised terrain using supervised machine learning.  "
                },
                {
                    "url": "/nn_terrain/instructions/record-latents/",
                    "title": "Recording latent trajectories",
                    "content": "Feeling like using some already built terrains? They can be used as presets.  "
                },
                {
                    "url": "/nn_terrain/instructions/interact/",
                    "title": "Composing and interacting with a terrain",
                    "content": "Feeling like using some already built terrains? They can be used as presets.  "
                },
                {
                    "url": "/nn_terrain/instructions/interact/stylus/",
                    "title": "With a Stylus",
                    "content": "Interacting with a terrain using a stylus (or mouse/cursor).  "
                },
                {
                    "url": "/nn_terrain/instructions/interact/playback/",
                    "title": "Trajectory Playback",
                    "content": "Interacting and composing with a terrain by trajectoy playback.  "
                },
                {
                    "url": "/nn_terrain/pre-trained/",
                    "title": "Pre-Trained Terrains (Presets)",
                    "content": "I am the first page linked into the primary navigation syntax-highlighting "
                },
                {
                    "url": "/nn_terrain/posts/hello-post/",
                    "title": "Hello Post!",
                    "content": "I am the first blog post post open-graph-image Howdy! I am the first blog post of this project. To create content with LibDoc, you can use markdown, inline HTML and widgets.Learn how to adjust blog settings.The image above is also used as Open Graph Image."
                },
                {
                    "url": "/nn_terrain/compile/",
                    "title": "Compile from Source",
                    "content": "I am the first page linked into the primary navigation  "
                },
                {
                    "url": "/nn_terrain/",
                    "title": "Latent Terrain Synthesis",
                    "content": "Building new musical instruments that compose and interact with AI audio generators.  MaxMSP externals available here, example MaxMSP/Max4Live devices will be available soon.OverviewLatent terrain is a coordinates-to-latents mapping model for neural audio autoencoders (such as RAVE, Music2Latent). It can be used to build a surface map for the autoencoder&#39;s latent space. It aims to open up the creative possibilities of latent space navigation.A terrain produces continuous latent vectors in real-time, taking coordinates in the control space as inputs.An example latent space walk with Music2Latent: --&gt;Audio autoencodersIn theory, latent terrain can work with any audio autoencoder as long as it offers latent variables. However, only a limited number of them have been implemented for MaxMSP, and we have only tested the following models:RAVE Realtime Audio Variational autoEncoder for fast and high-quality neural audio synthesis, by Antoine Caillon and Philippe Esling.Music2Latent-Scripted Music2Latent is a Consistency Autoencoder to encode and decode audio samples, by Marco Pasini, Stefan Lattner, and George Fazekas. We&#39;re using a scripted folk of the original repository.We plan to test the following model in the future:FlowDecvschaos2Get in touchLibDoc’s website contains a comprehensive documentation about how to install, configure and :LibDoc’s homepage The website containing LibDocs’s presentation and comprehensive documentation.Front matter Documentation of all front matter settings related to a LibDoc page.Primary navigation Detailed features of LibDoc’s primary navigation.SEO How LibDoc’s configuration and pages parameters are applied for Search Engine Optimization.Credits LibDoc could not work without these resources."
                },
                {
                    "url": "/nn_terrain/BuildInstructions/",
                    "title": "./BuildInstructions.md",
                    "content": "  Build InstructionsIf the externals have trouble opening in Max, or doesn&#39;t work correctly with nn_tilde, you might want to build the externals yourself:PrerequisitesMacOS (arm64):Xcode 11 or 12 (you can get from the App Store for free).Download arm64 LibTorch here and unzip it to a known directory. LibTorch&#39;s torch version should be the same as nn_tilde.Install a recent version of CMake (version 3.19 or higher).Windows:Download LibTorch here and unzip it to a known directory. LibTorch&#39;s torch version should be the same as nn_tilde.If you would like to enable GPU training/inference, you&#39;ll need to select the CUDA version of LibTorch, and have the corresponding CUDA ToolKit.Install a recent version of CMake (version 3.19 or higher).Build on MacOSRecursively clone this repository into Max&#39;s Packages folder. Terminal command:git clone https://github.com/jasper-zheng/nn_terrain.git --recursiveIn Terminal, cd into the nn_terrain folder you cloned, and make a new folder named build. and cd into that folder:cd nn_terrainmkdir buildcd buildRun the command below to generate an Xcode project, replace path/to/libtorch to the libtorch folder you&#39;ve downloaded:cmake ../src/ -G Xcode -DCMAKE_PREFIX_PATH=/path/to/libtorch -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=arm64 An Xcode project will be created in this build folder, you can either open the Xcode project and build it from there, or build by running the command below:cmake --build .The .mxo files will be created in the src/externals folder, move them ~/Documents/Max 9/Packages/nn_terrain/externals/Additionally, taken from min-devkit:If you are running on a Mac with Apple Silicon, you might see an error cannot be loaded due to system security policy when loading your externals in Max. To resolve this, you can ad-hoc codesign your external with codesign --force --deep -s - myobject.mxo.Build on WindowsRecursively clone this repository into Max&#39;s Packages folder. Terminal command:git clone https://github.com/jasper-zheng/nn_terrain.git --recurse-submodulesIn Terminal, cd into the nn_terrain folder you cloned, and make a new folder named build. and cd into that folder:cd nn_terrainmkdir buildcd buildThen run the command below to generate a project buildsystem, replace pathtolibtorch to the libtorch folder you&#39;ve downloaded, and make sure Visual Studio 17 2022 is set to your build system generator (run cmake --help to get a list of available options).cmake ..src -A x64 -DCMAKE_PREFIX_PATH=&amp;quot;pathtolibtorch&amp;quot; -G &amp;quot;Visual Studio 17 2022&amp;quot;Having generated the projects, now you can build by opening the .sln file in Visual Studio, or build on the command line using:cmake --build . --config ReleaseThe externals will be created in the src/externals folder, move them ~/Documents/Max 9/Packages/nn_terrain/externals/"
                },
                {
                    "url": "/nn_terrain/posts/",
                    "title": "./core/libdoc_blog.liquid",
                    "content": "  2025-05-15 Olivier 3lanc Hello Post! I am the first blog post 1"
                },
                {
                    "url": "/nn_terrain/tags/",
                    "title": "./core/libdoc_tags.liquid",
                    "content": "  syntax-highlighting open-graph-image"
                }
]